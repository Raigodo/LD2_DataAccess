// <auto-generated />
using System;
using Lab2.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab2.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.Property<int>("CoursesId")
                        .HasColumnType("int");

                    b.Property<int>("StudentsId")
                        .HasColumnType("int");

                    b.HasKey("CoursesId", "StudentsId");

                    b.HasIndex("StudentsId");

                    b.ToTable("CourseStudent");
                });

            modelBuilder.Entity("Lab2.DataAccess.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndingAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("InstructorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartingAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("InstructorId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndingAt = new DateTime(1, 1, 1, 1, 30, 0, 0, DateTimeKind.Unspecified),
                            InstructorId = 1,
                            StartingAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Topic = "why 2 + 2 != 4"
                        },
                        new
                        {
                            Id = 2,
                            EndingAt = new DateTime(2024, 10, 30, 15, 6, 40, 379, DateTimeKind.Local).AddTicks(2881),
                            InstructorId = 1,
                            StartingAt = new DateTime(2024, 10, 30, 13, 36, 40, 379, DateTimeKind.Local).AddTicks(2844),
                            Topic = "why 2 + 2 != 4"
                        },
                        new
                        {
                            Id = 3,
                            EndingAt = new DateTime(2024, 10, 31, 15, 36, 40, 379, DateTimeKind.Local).AddTicks(2886),
                            InstructorId = 1,
                            StartingAt = new DateTime(2024, 10, 31, 13, 36, 40, 379, DateTimeKind.Local).AddTicks(2884),
                            Topic = "Introduction to Quantum Mechanics"
                        },
                        new
                        {
                            Id = 4,
                            EndingAt = new DateTime(2024, 11, 1, 15, 6, 40, 379, DateTimeKind.Local).AddTicks(2891),
                            InstructorId = 1,
                            StartingAt = new DateTime(2024, 11, 1, 13, 36, 40, 379, DateTimeKind.Local).AddTicks(2889),
                            Topic = "Advanced Mathematics"
                        },
                        new
                        {
                            Id = 5,
                            EndingAt = new DateTime(2024, 11, 2, 15, 36, 40, 379, DateTimeKind.Local).AddTicks(2895),
                            InstructorId = 2,
                            StartingAt = new DateTime(2024, 11, 2, 13, 36, 40, 379, DateTimeKind.Local).AddTicks(2893),
                            Topic = "Philosophy of Science"
                        },
                        new
                        {
                            Id = 6,
                            EndingAt = new DateTime(2024, 11, 3, 15, 6, 40, 379, DateTimeKind.Local).AddTicks(2899),
                            InstructorId = 2,
                            StartingAt = new DateTime(2024, 11, 3, 13, 36, 40, 379, DateTimeKind.Local).AddTicks(2897),
                            Topic = "History of Art"
                        });
                });

            modelBuilder.Entity("Lab2.DataAccess.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("JoinedOn")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            JoinedOn = new DateOnly(2001, 7, 7),
                            Name = "Instruktors 1",
                            Surname = "aaaaaaaaaaa"
                        },
                        new
                        {
                            Id = 2,
                            JoinedOn = new DateOnly(2010, 12, 1),
                            Name = "Instruktors 2",
                            Surname = "bbbbbbbbbbbbbbb"
                        });
                });

            modelBuilder.Entity("Lab2.DataAccess.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.HasOne("Lab2.DataAccess.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab2.DataAccess.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lab2.DataAccess.Course", b =>
                {
                    b.HasOne("Lab2.DataAccess.Instructor", null)
                        .WithMany("Courses")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lab2.DataAccess.Instructor", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
